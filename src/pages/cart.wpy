<template>
  <block wx:if="{{cart.length>0}}">
    <view class="cart-list">
      <view class="shop-head">
        <view class="shop-head-info">
          <view class="iconfont icon-shop flex-center icon-dianpu"></view>
          <text class="shop-name">优购生活馆</text>
        </view>
      </view>
      <block wx:for="{{cart}}" wx:key="goods_id">
        <view class="product-item">
          <!-- 5.0.1 商品选择状态切换 -->
          <view
            @tap="changeChecked({{item.goods_id}})"
            class="iconfont-tap icon-xuanze {{item.isChecked ? 'icon-xuanze-fill':''}}"
          ></view>
          <!-- 1.0.5 列表渲染，商品详情页 url 拼接 -->
          <navigator url="/pages/goods_detail?goods_id={{item.goods_id}}" class="product-left">
            <image class="product-img" src="{{item.goods_small_logo}}">
          </navigator>
          <view class="product-right">
            <!-- 1.0.5 列表渲染，商品详情页 url 拼接 -->
            <navigator
              url="/pages/goods_detail?goods_id={{item.goods_id}}"
              class="product-name"
            >{{item.goods_name}}</navigator>
            <view class="product-detail"></view>
            <view class="product-price">
              <text class="product-price-symbol">￥</text>
              <text class="product-price-integer">{{item.goods_price}}</text>
              <text class="product-price-decimal">.00</text>
            </view>
            <view class="product-count-eidt">
              <view
                @tap="reduceCount({{item.goods_id}},{{-1}})"
                class="count-min {{item.goods_num == 1 ? 'disabled':''}}"
              >-</view>
              <input class="count-number" type="number" value="{{item.goods_num}}">
              <view @tap="reduceCount({{item.goods_id}},{{1}})" class="count-add">+</view>
            </view>
          </view>
        </view>
      </block>
    </view>
    <view class="bottom-space"></view>
    <view class="fixed-bar">
      <view @tap="checkedAll" class="iconfont-tap icon-xuanze {{isCheckAll?'icon-xuanze-fill':''}}"></view>
      <text class="select-all">全选</text>
      <view class="total">
        <view class="total">
          <view class="total-body">
            <view class="total-note">合计：</view>
            <view class="product-price">
              <text class="product-price-symbol">￥</text>
              <text class="product-price-integer">{{addCount}}</text>
              <text class="product-price-decimal">.00</text>
            </view>
          </view>
          <view class="total-foot">包含运费</view>
        </view>
      </view>
      <view @tap="goToOrder" class="buy-button {{num===0 ? 'disabled' : ''}}">结算({{num}})</view>
    </view>
  </block>
  <block wx:else>
    <view class="cart-empty">
      <view class="cart-empty-txt">购物车为空</view>
      <navigator class="cart-empty-nav" url="/pages/index" open-type="switchTab">点我，返回首页逛一下</navigator>
    </view>
  </block>
</template>
<script>
import wepy from 'wepy';

export default class Cart extends wepy.page {
  config = {
    navigationBarTitleText: '购物车',
    navigationBarBackgroundColor: '#ff2d4a',
    navigationBarTextStyle: 'white'
  };
  data = {
    cart: []
  };

  // 事件处理函数写在methods;
  methods = {
    // 点击单选框 让状态取反
    changeChecked(goods_id) {
      //  根据id来找到相应的商品详情,然后将它们的状态取反
      let goods = this.cart.find(item => item.goods_id == goods_id);
      console.log(goods);
      goods.isChecked = !goods.isChecked;
    },
    //点击全选, 如果都是被选中-->都不被选中,  有一个没选中-->全选中, 全没选中-->全选中
    checkedAll() {
      let flag = this.cart.some(item => !item.isChecked);
      this.cart.forEach(item => (item.isChecked = flag));
    },
    // 有问题  要注册到同一个事件上面 不然其他项的就不起作用

    async reduceCount(goods_id, num) {
      // console.log(goods_id, num);
      // 点击减号让数字减1
      // 点击加号让数字加1
      let goods = this.cart.find(item => item.goods_id == goods_id);
      if (goods.goods_num === 1 && num === -1) {
        // 做一个弹框
        let res = await wepy.showModal({
          title: '温馨提示',
          content: '您确定要删除该商品吗',
          confirmColor: '#1aad19'
        });
        // 如果确定 就删除这条数据
        if (res.confirm) {
          let index = this.cart.findIndex(item => item.goods_id == goods_id);
          // 删除这条数据
          this.cart.splice(index, 1);
          // 因为async 和 await 是异步操作 ,所以需要调用$apply()方法
          this.$apply();
        }
        return;
      }
      goods.goods_num += num;
    },
    // 明天测试下这段代码 看下能不能正常加减购物车数量 测试了 没有问题 但是没有上面代码简洁 推荐使用上面代码
    // reduceCount(goods_id, num) {
    //   console.log('点击了减号');
    //   let goods = this.cart.find(item => item.goods_id == goods_id);
    //   if (goods.goods_num == 1) {
    //     return;
    //   }
    //   goods.goods_num--;
    // },
    // plusCount(goods_id, num) {
    //   let goods = this.cart.find(item => item.goods_id == goods_id);

    //   goods.goods_num++;
    // }
    goToOrder() {
      if (this.num > 0) {
        wepy.navigateTo({
          url: '/pages/cart_order'
        });
      }
    }
  };
  //计算属性
  computed = {
    // 绑定单选框和多选框的关系, 如果单选框全部选中,全选也会被选中,只要有一个没选中 那就不会被全部选中
    isCheckAll() {
      return this.cart.every(item => item.isChecked);
    },
    // 结算的数字
    num() {
      // 有多少件商品,就是多少件商品的相加,用到reduce方法,用个数组.reduce
      return this.cart
        .filter(item => item.isChecked)
        .reduce((total, item) => (total += item.goods_num), 0);
    },
    //计算总金额, 是商品数量 * 商品单价的 相加
    addCount() {
      return this.cart
        .filter(item => item.isChecked)
        .reduce(
          (total, item) => (total += item.goods_num * item.goods_price),
          0
        );
    }
  };
  // 用watch监听数据改变 只要cart数据改变了 就需要把拿到的购物车最新的数据 存储到缓存中的
  watch = {
    // 很消耗性能
    cart(newValue) {
      wepy.setStorageSync('cart', newValue);
    }
  };
  onShow() {
    this.getCart();
  }
  // onHide(){
  //   // 不会消耗性能 但是存储数据不够及时
  //   wepy.setStorageSync("cart",this.cart)
  // }
  // 先从本地数据获取购物车添加的内容
  getCart() {
    this.cart = wepy.getStorageSync('cart') || [];
    console.log(this.cart);
  }
}
</script>

<style lang="less">
@import '../assets/wxss/icon-font.wxss';

page {
  height: 100%;
}
.address-info {
  height: 222rpx;
  position: relative;
  background-color: #fff;
}
.address-info .item {
  padding: 22rpx 16rpx;
  display: flex;
  flex-wrap: wrap;
  font-size: 32rpx;
  line-height: 1.3;
}

.address-info .item .col {
  display: flex;
  align-items: center;
}
.address-info .item .note {
  width: 160rpx;
}
.address-info .item .detail {
  max-width: 480rpx;
}
.address-info .item .address-phone {
  margin-right: 82rpx;
}
.address-info .item .icon-jiantouyou {
  position: absolute;
  right: 0;
}
.address-info .item .icon-jiantouyou:before {
  font-size: 24rpx;
  color: #999;
  line-height: 1;
  width: 15rpx;
  height: 25rpx;
}
.address-border {
  width: 100%;
  height: 15rpx;
}

.cart-list {
  background-color: #fff;
}
.shop-head {
  height: 88rpx;
  display: flex;
  align-items: center;
  border-bottom: 1rpx solid #ddd;
  position: relative;
  padding: 0 88rpx;
  // 屏蔽店铺全选后，把左内边距减少
  padding-left: 30rpx;
}
.shop-head-info {
  display: flex;
  font-size: 32rpx;
  align-items: center;
}
.shop-head-info .shop-name {
  margin-left: 10rpx;
}
.icon-xuanze,
.icon-xuanze-fill {
  position: absolute;
  left: 0;
}
.icon-xuanze:before,
.icon-xuanze-fill:before {
  width: 32rpx;
  height: 32rpx;
}
.icon-xuanze {
  color: #ccc;
}
.icon-xuanze-fill {
  color: #ff2d4a;
}
.icon-dianpu {
  color: #999;
}

.shop-head .icon-bianji {
  position: absolute;
  right: 0;
}

.shop-head .icon-bianji:before {
  width: 32rpx;
  height: 32rpx;
  color: #999;
}

.product-item {
  display: flex;
  padding: 30rpx 20rpx 30rpx 0;
  margin-left: 20rpx;
  border-top: 1rpx solid #ddd;
  margin-top: -1rpx;
  align-items: center;
  position: relative;
}

.product-left {
  width: 200rpx;
  height: 200rpx;
  background-color: #eee;
  margin-right: 26rpx;
}
.product-left .product-img {
  width: 200rpx;
  height: 200rpx;
}
.product-right {
  width: 480rpx;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: relative;
}
.product-name {
  height: 84rpx;
  font-size: 30rpx;
  line-height: 1.4;
  /* 多行文字隐藏省略号 */
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.product-price {
  color: #ff2d4a;
}
.product-price-symbol,
.product-price-decimal {
  font-size: 28rpx;
}
.product-price-integer {
  font-size: 44rpx;
}

.cart-list .product-item {
  display: flex;
  padding: 20rpx 16rpx 20rpx 0;
  border-top: 1rpx solid #ddd;
  margin-top: -1rpx;
  margin-left: 88rpx;
}

.product-left {
  margin-right: 20rpx;
}

.product-left,
.product-left .product-img {
  width: 160rpx;
  height: 160rpx;
}
.product-right {
  width: 464rpx;
}
.product-price-symbol,
.product-price-decimal {
  font-size: 24rpx;
}
.product-price-integer {
  font-size: 34rpx;
}

.product-item .icon-xuanze,
.product-item .icon-xuanze-fill {
  left: -88rpx;
}

.product-detail {
  font-size: 24rpx;
  line-height: 1.25;
  color: #999;
  margin: 20rpx 0 30rpx;
}
.product-count {
  position: absolute;
  right: 0;
  bottom: 0;
  letter-spacing: 2rpx;
}

.fixed-bar {
  width: 750rpx;
  height: 98rpx;
  padding: 18rpx 250rpx 18rpx 88rpx;
  box-sizing: border-box;
  background-color: #fff;
  position: fixed;
  bottom: 0;
  z-index: 11;
  display: flex;
  align-items: center;
  justify-content: space-between;
  .icon-xuanze {
    padding-right: 60rpx;
  }
}
.buy-button {
  width: 230rpx;
  height: 98rpx;
  line-height: 98rpx;
  font-size: 30rpx;
  background-color: #ff2d4a;
  color: #fff;
  position: absolute;
  right: 0;
  text-align: center;
  &.disabled {
    background-color: #ccc;
  }
}

.select-all {
  font-size: 30rpx;
}
.total-body {
  display: flex;
  align-items: baseline;
  font-size: 30rpx;
}
.total-foot {
  font-size: 24rpx;
  margin-top: 10rpx;
  color: #999;
}
.cart-empty {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  text-align: center;

  &-img {
    width: 180rpx;
    height: 180rpx;
    margin-bottom: 50rpx;
  }
  &-txt {
    margin-bottom: 50rpx;
    font-size: 28rpx;
  }
  &-nav {
    color: #ff2d4a;
  }
}
.product-count-eidt {
  display: flex;
  position: absolute;
  right: 0;
  bottom: 0;
  .count-min,
  .count-add {
    width: 60rpx;
    height: 50rpx;
    box-sizing: border-box;
    border: 4rpx solid #666;
    line-height: 50rpx;
    font-size: 28rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    &.disabled {
      border-color: #ccc;
      color: #ccc;
    }
  }
  .count-min {
    border-radius: 5rpx 0 0 5rpx;
  }
  .count-add {
    border-radius: 0 5rpx 5rpx 0;
  }
  .count-number {
    height: 50rpx;
    line-height: 50rpx;
    width: 80rpx;
    text-align: center;
    font-size: 24rpx;
  }
}
.iconfont-tap {
  font-family: 'iconfont' !important;
  font-size: 32rpx;
  font-style: normal;
  -webkit-font-smoothing: antialiased;

  min-width: 88rpx;
  min-height: 88rpx;
  display: flex;
  justify-content: center;
  align-items: center;
}
</style>

